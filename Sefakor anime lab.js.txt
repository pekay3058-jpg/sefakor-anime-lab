// sefakor-anime-lab.js
// Run with: node sefakor-anime-lab.js
// Then open: http://localhost:5000

import express from "express";
import fetch from "node-fetch";
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

dotenv.config();
const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Replicate API token
const REPLICATE_API_TOKEN = process.env.REPLICATE_API_TOKEN;

// Map styles to models
const STYLE_MODELS = {
  anime: "cjwbw/anything-v4.0",
  cartoon: "tencentarc/gfpgan",
  comic: "stability-ai/stable-diffusion",
  clay: "lucataco/arcane-diffusion",
  lowpoly: "fofr/lowpoly-world",
  cgi: "stability-ai/sdxl",
  manga: "tstramer/manga-line-art"
};

// API endpoint
app.post("/api/generate", async (req, res) => {
  try {
    const { image, style } = req.body;
    const model = STYLE_MODELS[style] || STYLE_MODELS.anime;

    const response = await fetch("https://api.replicate.com/v1/predictions", {
      method: "POST",
      headers: {
        "Authorization": `Token ${REPLICATE_API_TOKEN}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        version: model,
        input: { image }
      })
    });

    const data = await response.json();
    res.json(data);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// Serve frontend
app.get("/", (req, res) => {
  res.send(`
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Sefakor Anime Lab</title>
<style>
  body { font-family: Arial, sans-serif; background: linear-gradient(to bottom, #6a11cb, #2575fc); color: white; text-align: center; padding: 20px; }
  h1 { font-size: 2.5rem; }
  .grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 10px; margin-top: 20px; }
  button { padding: 10px; border: none; border-radius: 8px; cursor: pointer; background: #ff4081; color: white; font-weight: bold; }
  img { max-width: 100%; margin-top: 20px; border-radius: 10px; }
</style>
</head>
<body>
  <h1>✨ Sefakor Anime Lab ✨</h1>
  <p>Transform your photo into 7 catchy styles!</p>
  <input type="file" id="upload" />
  <div class="grid">
    <button onclick="applyStyle('anime')">Anime</button>
    <button onclick="applyStyle('cartoon')">Cartoon</button>
    <button onclick="applyStyle('comic')">Comic</button>
    <button onclick="applyStyle('clay')">Clay</button>
    <button onclick="applyStyle('lowpoly')">Low Poly</button>
    <button onclick="applyStyle('cgi')">CGI</button>
    <button onclick="applyStyle('manga')">Manga</button>
  </div>
  <div id="result"></div>
<script>
let uploadedImage = null;
document.getElementById("upload").addEventListener("change", (e) => {
  const reader = new FileReader();
  reader.onload = () => { uploadedImage = reader.result; };
  reader.readAsDataURL(e.target.files[0]);
});

async function applyStyle(style) {
  if (!uploadedImage) { alert("Upload an image first!"); return; }
  document.getElementById("result").innerHTML = "⏳ Processing...";
  const res = await fetch("/api/generate", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ image: uploadedImage, style })
  });
  const data = await res.json();
  document.getElementById("result").innerHTML = data.output 
    ? '<img src="' + data.output[0] + '" />' 
    : "❌ Failed to generate.";
}
</script>
</body>
</html>
  `);
});

app.listen(5000, () => console.log("✅ Running on http://localhost:5000"));